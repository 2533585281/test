1. Java NIO 概述
	Java NIO (New IO 或 Non Blocking IO )是Java1.4版本引入的一个新的IO API,可以替代标准的Java IO API。NIO 支持面向缓冲区，基于通道的IO操作。NIO更加高效的进行文件的读写操作。

	NIO 主要核心部分
	Channels(通道)     Buffers     Selectors

	Channels(通道)，译为通道，和IO中的Stream(流)是差不多一个等级的，只不过 Stream 是单向的，InputStream,OutputStream,而Channel是双向的，既可以读操作，又可以进行写操作。

	NIO中的Channel的主要实现有，FileChannel(从文件中读取数据),DatagramChannel(通过UDP读取网络数据),SocketChannel(通过TCP读取网络数据)和ServerSocketChannel(监听新的TCP连接，为新连接创建一个SocketChannel),分别对应文件IO,UDP,TCP(Server和Client)。

	Buffer(缓冲区)
	NIO Buffer的实现有:ByteBuffer,CharBuffer,DoubleBuffer,FloatBuffer,IntBuffer,LongBuffer,ShortBuffer,分别对应基本数据类型： byte,char,double,float,int,long,short。

	Buffer 通常操作，将数据写入缓冲区，调用buffer.flip()反转读写模式,从缓冲区读取数据，buffer.clear() 或 buffer.compact()清除缓冲区数据



	Selectors 
	Selector 运行单线程，处理多个Channel,要使用Selector,要向Selectoe注册Channel,调用它的select()方法。

	FileChannel channel=new FileChannel();
	channel.read() 读取方法  channel.write() 写方法  
	channel.position() 当前位置方法 	channel.size()方法 返回关联文件大小 channel.turncate(1024)方法 截取文件前1024个字符，后面的部分被删除
	channel.force() 强制写入方法，将通道里尚未写入磁盘的数据强制写入磁盘
	channel.tuansferTo()和 channel.tuansferFrom() 通道之间的数据传输 

	Socket 通道
	Socket通道类 DatagramChannel SocketChannel ServerSocketChannel 都继承了 java.nio.channels.spi包中的 AbstractSelectableChannel。我们可以用一个Selector(选择器)来处理多个通道。
	DatagramChannel 和 SocketChannel 都实现了读和写的功能的接口，ServerSocketChannel不实现，ServerSocketChannel 负责监听传入的连接和创建新的SocketChannel对象，它本身不传输数据。

	socket 和 socket 通道之间的关系
	某个socket而言，它不会再次实现与之对应的socket通道类中的socket协议API，而java.net中已经存在的socket通道都可以被大多数协议操作重复使用。

	socket通道 手动选择是否阻塞模式
	AbstractSelectableChannel.configureBlocking(boolean block); true 阻塞 flase非阻塞 
	
	https://www.bilibili.com/video/BV1E64y1h7Z4?p=8 下一个视频

